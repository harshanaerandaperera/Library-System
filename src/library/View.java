package library;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


//IT16083424 Perera P.A.H.E     SHU ID=27045240 
/**
 *
 * @author Harshana
 */
public class View extends javax.swing.JFrame implements Serializable {

    private SetOfMembers SOM = new SetOfMembers();
    private SetOfBooks SOB = new SetOfBooks();
    validator v = new validator();

    /**
     * Creates new form View
     */
    public View() {
        initComponents();
        memberDeserialize();
        addMemberTableLoad();
        bookDeserialize();
        addBookTableLoad();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMemberEmail = new javax.swing.JTextField();
        txtMemberName = new javax.swing.JTextField();
        txtContactNo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        addMemberTable = new javax.swing.JTable();
        btnAddMember = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtMemberId = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        btnSearchMember = new javax.swing.JButton();
        txtsearchMember = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        removeMemberTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        lblMemberName = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblMemberEmail = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblMemberContactNo = new javax.swing.JLabel();
        btnRemoveMember = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtBookID = new javax.swing.JTextField();
        txtISBN = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        txtBookTitle = new javax.swing.JTextField();
        btnAddBook = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        addBookTable = new javax.swing.JTable();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        removeBookTable = new javax.swing.JTable();
        btnRemoveBook = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        comboSearchBookOption = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        searchBookTable = new javax.swing.JTable();
        txtSearchBooksByParameters = new javax.swing.JTextField();
        btnSearchBookByParameters = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JSeparator();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        NotAvailableBooksTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtBorrowerID = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        borrowTable = new javax.swing.JTable();
        btnBorrowBook = new javax.swing.JButton();
        btnReturnBook = new javax.swing.JButton();
        btnViewMemberLoans = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        tableViewMemberLoans = new javax.swing.JTable();
        jSeparator11 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(32, 33, 35));
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTabbedPane2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane2MouseClicked(evt);
            }
        });

        jTabbedPane1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(32, 33, 35));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Name: ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 128, -1, -1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Email: ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 208, -1, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ContactNo: ");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 301, -1, -1));

        txtMemberEmail.setBackground(new java.awt.Color(32, 33, 35));
        txtMemberEmail.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtMemberEmail.setForeground(new java.awt.Color(255, 255, 255));
        txtMemberEmail.setBorder(null);
        jPanel1.add(txtMemberEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 200, 162, 27));

        txtMemberName.setBackground(new java.awt.Color(32, 33, 35));
        txtMemberName.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtMemberName.setForeground(new java.awt.Color(255, 255, 255));
        txtMemberName.setBorder(null);
        jPanel1.add(txtMemberName, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 120, 171, 27));

        txtContactNo.setBackground(new java.awt.Color(32, 33, 35));
        txtContactNo.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtContactNo.setForeground(new java.awt.Color(255, 255, 255));
        txtContactNo.setBorder(null);
        jPanel1.add(txtContactNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 290, 172, 30));

        addMemberTable.setBackground(new java.awt.Color(32, 33, 35));
        addMemberTable.setForeground(new java.awt.Color(255, 255, 255));
        addMemberTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member ID", "Name", "Email", "Contact Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(addMemberTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(367, 42, 824, 441));

        btnAddMember.setBackground(new java.awt.Color(38, 50, 56));
        btnAddMember.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnAddMember.setForeground(new java.awt.Color(255, 255, 255));
        btnAddMember.setText("                ADD                 ");
        btnAddMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMemberActionPerformed(evt);
            }
        });
        jPanel1.add(btnAddMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 378, 265, -1));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Member ID:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 88, -1));

        txtMemberId.setBackground(new java.awt.Color(32, 33, 35));
        txtMemberId.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtMemberId.setForeground(new java.awt.Color(255, 255, 255));
        txtMemberId.setBorder(null);
        jPanel1.add(txtMemberId, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 42, 171, 27));

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 75, 171, 10));

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 153, 171, 10));

        jSeparator4.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 233, 171, 12));

        jSeparator5.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 326, 172, 10));

        jTabbedPane1.addTab("                                          Add Member                                           ", jPanel1);

        jPanel2.setBackground(new java.awt.Color(32, 33, 35));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSearchMember.setBackground(new java.awt.Color(38, 50, 56));
        btnSearchMember.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnSearchMember.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchMember.setText("Search");
        btnSearchMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMemberActionPerformed(evt);
            }
        });
        jPanel2.add(btnSearchMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 101, 279, 33));

        txtsearchMember.setBackground(new java.awt.Color(32, 33, 35));
        txtsearchMember.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtsearchMember.setForeground(new java.awt.Color(255, 255, 255));
        txtsearchMember.setToolTipText("");
        txtsearchMember.setBorder(null);
        jPanel2.add(txtsearchMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 40, 126, 32));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Enter Member ID :");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 40, 145, 32));

        removeMemberTable.setBackground(new java.awt.Color(32, 33, 35));
        removeMemberTable.setForeground(new java.awt.Color(255, 255, 255));
        removeMemberTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member ID", "Name", "Email", "Contact No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(removeMemberTable);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 20, 795, 453));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Member Name :");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 189, -1, -1));

        lblMemberName.setBackground(new java.awt.Color(255, 0, 0));
        lblMemberName.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        lblMemberName.setForeground(new java.awt.Color(255, 0, 0));
        lblMemberName.setText("________________");
        jPanel2.add(lblMemberName, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 187, -1, -1));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Member Email :");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 259, -1, -1));

        lblMemberEmail.setBackground(new java.awt.Color(255, 0, 0));
        lblMemberEmail.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        lblMemberEmail.setForeground(new java.awt.Color(255, 0, 0));
        lblMemberEmail.setText("________________");
        jPanel2.add(lblMemberEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 257, -1, -1));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Contact No :");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 331, -1, -1));

        lblMemberContactNo.setBackground(new java.awt.Color(255, 0, 0));
        lblMemberContactNo.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        lblMemberContactNo.setForeground(new java.awt.Color(255, 0, 0));
        lblMemberContactNo.setText("________________");
        jPanel2.add(lblMemberContactNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 329, -1, -1));

        btnRemoveMember.setBackground(new java.awt.Color(38, 50, 56));
        btnRemoveMember.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnRemoveMember.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveMember.setText("Remove");
        btnRemoveMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveMemberActionPerformed(evt);
            }
        });
        jPanel2.add(btnRemoveMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 395, 263, -1));

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 78, 126, 11));

        jTabbedPane1.addTab("                                  Search Member & Remove Member                             ", jPanel2);

        jTabbedPane2.addTab("     Member Management     ", jTabbedPane1);

        jTabbedPane3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jTabbedPane3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane3MouseClicked(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(32, 33, 35));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Book ID:");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 92, -1, -1));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("ISBN:");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 170, -1, -1));

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Book Title:");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 251, -1, -1));

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Author:");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 326, -1, -1));

        txtBookID.setBackground(new java.awt.Color(32, 33, 35));
        txtBookID.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtBookID.setForeground(new java.awt.Color(255, 255, 255));
        txtBookID.setBorder(null);
        jPanel4.add(txtBookID, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 90, 103, -1));

        txtISBN.setBackground(new java.awt.Color(32, 33, 35));
        txtISBN.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtISBN.setForeground(new java.awt.Color(255, 255, 255));
        txtISBN.setBorder(null);
        jPanel4.add(txtISBN, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 170, 103, -1));

        txtAuthor.setBackground(new java.awt.Color(32, 33, 35));
        txtAuthor.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtAuthor.setForeground(new java.awt.Color(255, 255, 255));
        txtAuthor.setBorder(null);
        jPanel4.add(txtAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 326, 103, -1));

        txtBookTitle.setBackground(new java.awt.Color(32, 33, 35));
        txtBookTitle.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtBookTitle.setForeground(new java.awt.Color(255, 255, 255));
        txtBookTitle.setBorder(null);
        jPanel4.add(txtBookTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 249, 103, -1));

        btnAddBook.setBackground(new java.awt.Color(38, 50, 56));
        btnAddBook.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnAddBook.setForeground(new java.awt.Color(255, 255, 255));
        btnAddBook.setText("ADD");
        btnAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBookActionPerformed(evt);
            }
        });
        jPanel4.add(btnAddBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 417, 217, -1));

        addBookTable.setBackground(new java.awt.Color(32, 33, 35));
        addBookTable.setForeground(new java.awt.Color(255, 255, 255));
        addBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "ISBN", "Title", "Author"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(addBookTable);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 35, 808, 439));

        jSeparator6.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 117, 103, 10));

        jSeparator7.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator7.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 197, 103, 10));

        jSeparator8.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator8.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 276, 103, 10));

        jSeparator9.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator9.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 353, 103, 10));

        jTabbedPane3.addTab("                                                    Add Book                                                       ", jPanel4);

        jPanel8.setBackground(new java.awt.Color(32, 33, 35));

        removeBookTable.setBackground(new java.awt.Color(32, 33, 35));
        removeBookTable.setForeground(new java.awt.Color(255, 255, 255));
        removeBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "ISBN", "Title", "Author"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(removeBookTable);

        btnRemoveBook.setBackground(new java.awt.Color(38, 50, 56));
        btnRemoveBook.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnRemoveBook.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveBook.setText("Remove");
        btnRemoveBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRemoveBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1171, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemoveBook)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("                                             Remove Book                                        ", jPanel8);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane2.addTab("     Book Management     ", jPanel5);

        jTabbedPane4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jTabbedPane4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane4MouseClicked(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(32, 33, 35));

        comboSearchBookOption.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        comboSearchBookOption.setForeground(new java.awt.Color(255, 255, 255));
        comboSearchBookOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Search By", "Book ID", "ISBN", "Title", "Author" }));

        searchBookTable.setBackground(new java.awt.Color(32, 33, 35));
        searchBookTable.setForeground(new java.awt.Color(255, 255, 255));
        searchBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "ISBN", "Title", "Author"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(searchBookTable);

        txtSearchBooksByParameters.setBackground(new java.awt.Color(32, 33, 35));
        txtSearchBooksByParameters.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtSearchBooksByParameters.setForeground(new java.awt.Color(255, 255, 255));
        txtSearchBooksByParameters.setBorder(null);

        btnSearchBookByParameters.setBackground(new java.awt.Color(38, 50, 56));
        btnSearchBookByParameters.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnSearchBookByParameters.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchBookByParameters.setText("Search");
        btnSearchBookByParameters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBookByParametersActionPerformed(evt);
            }
        });

        jSeparator10.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator10.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(comboSearchBookOption, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator10)
                    .addComponent(txtSearchBooksByParameters, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                .addGap(69, 69, 69)
                .addComponent(btnSearchBookByParameters, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchBooksByParameters, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboSearchBookOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearchBookByParameters)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("                                                   All Books                                                   ", jPanel9);

        jPanel10.setBackground(new java.awt.Color(32, 33, 35));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        NotAvailableBooksTable.setBackground(new java.awt.Color(32, 33, 35));
        NotAvailableBooksTable.setForeground(new java.awt.Color(255, 255, 255));
        NotAvailableBooksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Book Title", "Borrower ID", "Borrower Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(NotAvailableBooksTable);

        jPanel10.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 38, 1149, 436));

        jTabbedPane4.addTab("                                            Books On Loan                                          ", jPanel10);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane2.addTab("   Search Book   ", jPanel6);

        jPanel7.setBackground(new java.awt.Color(32, 33, 35));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Member ID: ");
        jPanel7.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 21, -1, -1));

        txtBorrowerID.setBackground(new java.awt.Color(32, 33, 35));
        txtBorrowerID.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtBorrowerID.setForeground(new java.awt.Color(255, 255, 255));
        txtBorrowerID.setBorder(null);
        jPanel7.add(txtBorrowerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 11, 262, 37));

        borrowTable.setBackground(new java.awt.Color(32, 33, 35));
        borrowTable.setForeground(new java.awt.Color(255, 255, 255));
        borrowTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Book Title", "Status", "Borrower ID", "Borrower Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(borrowTable);

        jPanel7.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 66, 722, 349));

        btnBorrowBook.setBackground(new java.awt.Color(38, 50, 56));
        btnBorrowBook.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnBorrowBook.setForeground(new java.awt.Color(255, 255, 255));
        btnBorrowBook.setText("Borrow Book");
        btnBorrowBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowBookActionPerformed(evt);
            }
        });
        jPanel7.add(btnBorrowBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 433, 289, -1));

        btnReturnBook.setBackground(new java.awt.Color(38, 50, 56));
        btnReturnBook.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnReturnBook.setForeground(new java.awt.Color(255, 255, 255));
        btnReturnBook.setText("Return Book");
        btnReturnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnBookActionPerformed(evt);
            }
        });
        jPanel7.add(btnReturnBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(418, 433, 304, -1));

        btnViewMemberLoans.setBackground(new java.awt.Color(38, 50, 56));
        btnViewMemberLoans.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnViewMemberLoans.setForeground(new java.awt.Color(255, 255, 255));
        btnViewMemberLoans.setText("View Member Loans");
        btnViewMemberLoans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewMemberLoansActionPerformed(evt);
            }
        });
        jPanel7.add(btnViewMemberLoans, new org.netbeans.lib.awtextra.AbsoluteConstraints(798, 11, 381, -1));

        tableViewMemberLoans.setBackground(new java.awt.Color(32, 33, 35));
        tableViewMemberLoans.setForeground(new java.awt.Color(255, 255, 255));
        tableViewMemberLoans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Books that a member currently has on loan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(tableViewMemberLoans);

        jPanel7.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(798, 66, 381, 404));

        jSeparator11.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator11.setForeground(new java.awt.Color(255, 255, 255));
        jPanel7.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 44, 262, 10));

        jTabbedPane2.addTab("   Manage Borrower   ", jPanel7);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1220, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 542, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("   X   ", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1222, 585));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMemberActionPerformed

        String name, email, contactNo, memberId;
        memberId = txtMemberId.getText();
        name = txtMemberName.getText();
        email = txtMemberEmail.getText();
        contactNo = txtContactNo.getText();

        if ((v.isValidMemberID(memberId)) && (v.isValidEmail(email)) && (v.isValidMobileNo(contactNo)) && (v.isValidName(name)) && (SOM.getMemberFromID(memberId) == null)) {
            Member m = new Member(memberId, name, email, contactNo);
            SOM.addMember(m);
            addMemberTableLoad();
        } else {
            JOptionPane.showMessageDialog(null, "Sorry, invalid details,please try again!!", "Add Member", JOptionPane.ERROR_MESSAGE);
        }
        clearText();
    }//GEN-LAST:event_btnAddMemberActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        memberSerialize(SOM);
        bookSerialize(SOB);
    }//GEN-LAST:event_formWindowClosing

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        int index = jTabbedPane1.getSelectedIndex();
        if (index == 0) {
            addMemberTableLoad();
        }
        if (index == 1) {
            removeMemberTableLoad();
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void btnAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBookActionPerformed
        String bid, isbn, title, author;
        bid = txtBookID.getText();
        isbn = txtISBN.getText();
        title = txtBookTitle.getText();
        author = txtAuthor.getText();
        if ((v.isValidBookID(bid)) && (v.isValidISBN(isbn)) && (v.isValidBookTitle(title)) && (v.isValidName(author)) && (SOB.findBookFromBookID(bid) == null)) {
            Book b = new Book(bid, isbn, title, author);
            SOB.addBook(b);
            addBookTableLoad();
        } else {
            JOptionPane.showMessageDialog(null, "Sorry, invalid details,please try again!!", "Add Book", JOptionPane.ERROR_MESSAGE);
        }
        clearText();
    }//GEN-LAST:event_btnAddBookActionPerformed

    private void btnRemoveBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveBookActionPerformed

        DefaultTableModel d = (DefaultTableModel) removeBookTable.getModel();
        int i = removeBookTable.getSelectedRow();  //get the selected row index    
        String boid = d.getValueAt(i, 0).toString();
        SOB.removeBook(SOB.findBookFromBookID(boid));
        removeBookTableLoad();

    }//GEN-LAST:event_btnRemoveBookActionPerformed

    private void jTabbedPane3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane3MouseClicked
        int index = jTabbedPane3.getSelectedIndex();
        if (index == 0) {
            addBookTableLoad();
        }
        if (index == 1) {
            removeBookTableLoad();
        }
    }//GEN-LAST:event_jTabbedPane3MouseClicked

    private void btnBorrowBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowBookActionPerformed

        try {
            int count = 0;
            String borrowerID = txtBorrowerID.getText();
            DefaultTableModel d = (DefaultTableModel) borrowTable.getModel();
            int i = borrowTable.getSelectedRow();  //get the selected row index    
            String boid = d.getValueAt(i, 0).toString();
            for (int j = 0; j < SOB.size(); j++) {
                if (SOB.get(j).getBorrower() == null) {
                    continue;
                }
                if (SOB.get(j).getBorrower().getMemberID().equals(borrowerID)) {
                    count++;
                }
            }
            if (count < 3) {
                SOB.findBookFromBookID(boid).setBorrower(SOM.getMemberFromID(borrowerID));
                SOB.findBookFromBookID(boid).changeStatus(boid, false);
            } else {
                JOptionPane.showMessageDialog(null, "Sorry,You can only borrow maximum 3 books !!", " Borrow Book ", JOptionPane.ERROR_MESSAGE);
            }
            borrowTableLoad();
        } catch (Exception e) {

        }
        clearText();
        NotAvailableBookTableLoad();
    }//GEN-LAST:event_btnBorrowBookActionPerformed

    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked

        int index = jTabbedPane2.getSelectedIndex();
        if (index == 3) {
            borrowTableLoad();
        }
        if (index == 4) {
            memberSerialize(SOM);
            bookSerialize(SOB);
            this.dispose();     //exit the application
        }
        if (index == 2) {
            searchBookTableLoad();
        }
    }//GEN-LAST:event_jTabbedPane2MouseClicked

    private void btnRemoveMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveMemberActionPerformed
        int yesNo = JOptionPane.showConfirmDialog(null, "Do you really want to delete?", "Delete", JOptionPane.YES_NO_OPTION);

        if (yesNo == 0) {                                       //yes=0   No=1
            String searchKey = txtsearchMember.getText();
            SOM.removeMember(SOM.getMemberFromID(searchKey));
            removeMemberTableLoad();
        }
        clearText();
    }//GEN-LAST:event_btnRemoveMemberActionPerformed

    private void btnSearchMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMemberActionPerformed
        String searchKey = txtsearchMember.getText();
        try {
            lblMemberName.setText(SOM.getMemberFromID(searchKey).getName());
            lblMemberEmail.setText(SOM.getMemberFromID(searchKey).getEmail());
            lblMemberContactNo.setText(SOM.getMemberFromID(searchKey).getMobile());
        } catch (Exception e) {
        }


    }//GEN-LAST:event_btnSearchMemberActionPerformed

    private void btnReturnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnBookActionPerformed

        Member mmbr = null;
        String returnMemberID = txtBorrowerID.getText();
        DefaultTableModel d1 = (DefaultTableModel) borrowTable.getModel();
        int i = borrowTable.getSelectedRow();  //get the selected row index    
        String reBid = d1.getValueAt(i, 0).toString();

        if (SOB.findBookFromBookID(reBid).getBorrower().getMemberID().equals(returnMemberID)) {
            SOB.findBookFromBookID(reBid).setBorrower(mmbr);
            SOB.findBookFromBookID(reBid).changeStatus(reBid, true);
        } else {
            JOptionPane.showMessageDialog(null, "Sorry,You can't proceed this action now,try again!!", " Return Book ", JOptionPane.ERROR_MESSAGE);
        }
        borrowTableLoad();
        NotAvailableBookTableLoad();
        clearText();
    }//GEN-LAST:event_btnReturnBookActionPerformed

    private void jTabbedPane4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane4MouseClicked
        int index = jTabbedPane4.getSelectedIndex();
        if (index == 1) {
            NotAvailableBookTableLoad();
        }
    }//GEN-LAST:event_jTabbedPane4MouseClicked

    private void btnViewMemberLoansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewMemberLoansActionPerformed

        String mID = txtBorrowerID.getText();
        try {
            DefaultTableModel dtm = (DefaultTableModel) tableViewMemberLoans.getModel();
            dtm.setRowCount(0);
            for (int i = 0; i < SOB.getBooksOnLoan(SOM.getMemberFromID(mID)).size(); i++) {
                Book bb = SOB.getBooksOnLoan(SOM.getMemberFromID(mID)).get(i);
                Vector v = new Vector();
                v.add(bb.getTitle());
                dtm.addRow(v);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnViewMemberLoansActionPerformed

    private void btnSearchBookByParametersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBookByParametersActionPerformed

        String searchKey = txtSearchBooksByParameters.getText();

        if (comboSearchBookOption.getSelectedIndex() == 0) {
            searchBookTableLoad();
            clearText();
        }
        if (comboSearchBookOption.getSelectedIndex() == 1) {
            try {
                SOB.findBookFromBookID(searchKey);

                DefaultTableModel dtm = (DefaultTableModel) searchBookTable.getModel();
                dtm.setRowCount(0);
                Vector v = new Vector();

                v.add(SOB.findBookFromBookID(searchKey).getBookID());
                v.add(SOB.findBookFromBookID(searchKey).getIsbn());
                v.add(SOB.findBookFromBookID(searchKey).getTitle());
                v.add(SOB.findBookFromBookID(searchKey).getAuthor());
                dtm.addRow(v);
            } catch (Exception e) {

            }

        }

        if (comboSearchBookOption.getSelectedIndex() == 2) {
            SOB.findBookFromISBN(searchKey);
            DefaultTableModel dtm = (DefaultTableModel) searchBookTable.getModel();
            dtm.setRowCount(0);
            for (int i = 0; i < SOB.findBookFromISBN(searchKey).size(); i++) {
                Book bb = SOB.findBookFromISBN(searchKey).get(i);
                Vector v = new Vector();
                v.add(bb.getBookID());
                v.add(bb.getIsbn());
                v.add(bb.getTitle());
                v.add(bb.getAuthor());
                dtm.addRow(v);
            }

        }
        if (comboSearchBookOption.getSelectedIndex() == 3) {
            SOB.findBookFromTitle(searchKey);
            DefaultTableModel dtm = (DefaultTableModel) searchBookTable.getModel();
            dtm.setRowCount(0);
            for (int i = 0; i < SOB.findBookFromTitle(searchKey).size(); i++) {
                Book bb = SOB.findBookFromTitle(searchKey).get(i);
                Vector v = new Vector();
                v.add(bb.getBookID());
                v.add(bb.getIsbn());
                v.add(bb.getTitle());
                v.add(bb.getAuthor());
                dtm.addRow(v);
            }
        }
        if (comboSearchBookOption.getSelectedIndex() == 4) {
            SOB.findBookByAuthor(searchKey);
            DefaultTableModel dtm = (DefaultTableModel) searchBookTable.getModel();
            dtm.setRowCount(0);
            for (int i = 0; i < SOB.findBookByAuthor(searchKey).size(); i++) {
                Book bb = SOB.findBookByAuthor(searchKey).get(i);
                Vector v = new Vector();
                v.add(bb.getBookID());
                v.add(bb.getIsbn());
                v.add(bb.getTitle());
                v.add(bb.getAuthor());
                dtm.addRow(v);
            }
        }

        clearText();
    }//GEN-LAST:event_btnSearchBookByParametersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable NotAvailableBooksTable;
    private javax.swing.JTable addBookTable;
    private javax.swing.JTable addMemberTable;
    private javax.swing.JTable borrowTable;
    private javax.swing.JButton btnAddBook;
    private javax.swing.JButton btnAddMember;
    private javax.swing.JButton btnBorrowBook;
    private javax.swing.JButton btnRemoveBook;
    private javax.swing.JButton btnRemoveMember;
    private javax.swing.JButton btnReturnBook;
    private javax.swing.JButton btnSearchBookByParameters;
    private javax.swing.JButton btnSearchMember;
    private javax.swing.JButton btnViewMemberLoans;
    private javax.swing.JComboBox<String> comboSearchBookOption;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JLabel lblMemberContactNo;
    private javax.swing.JLabel lblMemberEmail;
    private javax.swing.JLabel lblMemberName;
    private javax.swing.JTable removeBookTable;
    private javax.swing.JTable removeMemberTable;
    private javax.swing.JTable searchBookTable;
    private javax.swing.JTable tableViewMemberLoans;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookID;
    private javax.swing.JTextField txtBookTitle;
    private javax.swing.JTextField txtBorrowerID;
    private javax.swing.JTextField txtContactNo;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtMemberEmail;
    private javax.swing.JTextField txtMemberId;
    private javax.swing.JTextField txtMemberName;
    private javax.swing.JTextField txtSearchBooksByParameters;
    private javax.swing.JTextField txtsearchMember;
    // End of variables declaration//GEN-END:variables

    public void addMemberTableLoad() {
        DefaultTableModel dtm = (DefaultTableModel) addMemberTable.getModel();
        dtm.setRowCount(0);
        for (int i = 0; i < SOM.size(); i++) {
            Member mm = SOM.get(i);
            Vector v = new Vector();
            v.add(mm.getMemberID());
            v.add(mm.getName());
            v.add(mm.getEmail());
            v.add(mm.getMobile());
            dtm.addRow(v);
        }
    }

    public void memberSerialize(SetOfMembers SOM) {
        try {
            FileOutputStream mfos = new FileOutputStream(new File("memberDB.txt"));
            ObjectOutputStream moos = new ObjectOutputStream(mfos);
            moos.writeObject(SOM);
            moos.flush();
            moos.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void bookSerialize(SetOfBooks SOB) {
        try {
            FileOutputStream bfos = new FileOutputStream(new File("bookDB.txt"));
            ObjectOutputStream boos = new ObjectOutputStream(bfos);
            boos.writeObject(SOB);
            boos.flush();
            boos.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void memberDeserialize() {
        ObjectInputStream mois = null;
        File file = new File("memberDB.txt");
        try {

            FileInputStream mfis = new FileInputStream(file);
            if (mfis.available() != 0) {
                mois = new ObjectInputStream(mfis);
                while (mois != null) {
                    SOM = (SetOfMembers) mois.readObject();
                }
            }
        } catch (Exception e) {

        }
    }

    public void removeMemberTableLoad() {

        DefaultTableModel dtm1 = (DefaultTableModel) removeMemberTable.getModel();
        dtm1.setRowCount(0);
        for (int i = 0; i < SOM.size(); i++) {
            Member mm = SOM.get(i);
            Vector v = new Vector();
            v.add(mm.getMemberID());
            v.add(mm.getName());
            v.add(mm.getEmail());
            v.add(mm.getMobile());
            dtm1.addRow(v);
        }
    }

    public void addBookTableLoad() {
        DefaultTableModel dtm = (DefaultTableModel) addBookTable.getModel();
        dtm.setRowCount(0);
        for (int i = 0; i < SOB.size(); i++) {
            Book bb = SOB.get(i);
            Vector v = new Vector();
            v.add(bb.getBookID());
            v.add(bb.getIsbn());
            v.add(bb.getTitle());
            v.add(bb.getAuthor());
            dtm.addRow(v);
        }
    }

    public void searchBookTableLoad() {
        DefaultTableModel dtm = (DefaultTableModel) searchBookTable.getModel();
        dtm.setRowCount(0);
        for (int i = 0; i < SOB.size(); i++) {
            Book bb = SOB.get(i);
            Vector v = new Vector();
            v.add(bb.getBookID());
            v.add(bb.getIsbn());
            v.add(bb.getTitle());
            v.add(bb.getAuthor());
            dtm.addRow(v);
        }
    }

    public void bookDeserialize() {
        ObjectInputStream bois = null;
        File file = new File("bookDB.txt");
        try {
            FileInputStream bfis = new FileInputStream(file);
            if (bfis.available() != 0) {
                bois = new ObjectInputStream(bfis);
                while (bois != null) {
                    SOB = (SetOfBooks) bois.readObject();
                }
            }
        } catch (Exception e) {

        }
    }

    private void removeBookTableLoad() {

        DefaultTableModel dtm = (DefaultTableModel) removeBookTable.getModel();
        dtm.setRowCount(0);
        for (int i = 0; i < SOB.size(); i++) {
            Book bb = SOB.get(i);
            Vector v = new Vector();
            v.add(bb.getBookID());
            v.add(bb.getIsbn());
            v.add(bb.getTitle());
            v.add(bb.getAuthor());
            dtm.addRow(v);
        }
    }

    private void borrowTableLoad() {     //remove 2 columns
        try {
            DefaultTableModel dtm = (DefaultTableModel) borrowTable.getModel();
            dtm.setRowCount(0);
            for (int i = 0; i < SOB.size(); i++) {
                Book bb = SOB.get(i);
                Vector v = new Vector();
                v.add(bb.getBookID());
                v.add(bb.getTitle());
                v.add(bb.getStatus());

                if (bb.getBorrower() == null) {
                    v.add("No borrower");
                    v.add("No borrower");
                } else {
                    v.add(bb.getBorrower().getMemberID());
                    v.add(bb.getBorrower().getName());
                }
                dtm.addRow(v);
            }
        } catch (Exception e) {

        }
    }

    private void NotAvailableBookTableLoad() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) NotAvailableBooksTable.getModel();
            dtm.setRowCount(0);
            for (int i = 0; i < SOB.size(); i++) {
                Book bb = SOB.get(i);
                Vector v = new Vector();
                v.add(bb.getBookID());
                v.add(bb.getTitle());
                v.add(bb.getBorrower().getMemberID());
                v.add(bb.getBorrower().getName());
                dtm.addRow(v);
            }
        } catch (Exception e) {

        }
    }

    public void clearText() {
        txtMemberId.setText("");
        txtMemberEmail.setText("");
        txtMemberName.setText("");
        txtContactNo.setText("");
        txtsearchMember.setText("");
        lblMemberName.setText("");
        lblMemberEmail.setText("");
        lblMemberContactNo.setText("");
        txtBookID.setText("");
        txtISBN.setText("");
        txtBookTitle.setText("");
        txtAuthor.setText("");
        txtSearchBooksByParameters.setText("");
        txtBorrowerID.setText("");

    }
}
